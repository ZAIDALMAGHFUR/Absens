{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]:not(slot)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n  'details>summary:first-of-type',\n  'details',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element.getRootNode()\n    : (element) => element.ownerDocument;\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      const validShadowRoot =\n        !options.shadowRootFilter || options.shadowRootFilter(element);\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\nconst getTabindex = function (node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if (\n      (isScope ||\n        /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        node.isContentEditable) &&\n      isNaN(parseInt(node.getAttribute('tabindex'), 10))\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  let nodeRootHost = getRootNode(node).host;\n  let attached = !!(\n    nodeRootHost?.ownerDocument.contains(nodeRootHost) ||\n    node.ownerDocument.contains(node)\n  );\n\n  while (!attached && nodeRootHost) {\n    // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n    //  which means we need to get the host's host and check if that parent host is contained\n    //  in (i.e. attached to) the document\n    nodeRootHost = getRootNode(nodeRootHost).host;\n    attached = !!nodeRootHost?.ownerDocument.contains(nodeRootHost);\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabindex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getTabindex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable };\n"],"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","getTabindex","node","isScope","tabIndex","test","isContentEditable","isNaN","parseInt","getAttribute","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isNodeAttached","nodeRootHost","host","attached","contains","isZeroArea","getBoundingClientRect","width","height","isHidden","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","parentNode","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable"],"mappings":"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"}